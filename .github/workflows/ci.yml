name: CI

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        python: ["3.6", "3.7"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Conda Bootstrap
        uses: goanpeca/setup-miniconda@v1
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python }}
      - name: Conda Config
        run: |
          conda config --add channels conda-forge
          conda config --set channel_priority strict
          conda config --set always_yes yes
          conda config --set changeps1 no
          conda config --set pip_interop_enabled True
      - name: Conda Install
        shell: bash -l {0}
        run: conda install --yes shellcheck --file=requirements.txt --file=test-requirements.txt
      - name: Pip Install
        shell: bash -l {0}
        run: pip install --no-deps -e .[testing]
      - name: MyPy
        shell: bash -l {0}
        run: mypy .
      - name: PyTest
        shell: bash -l {0}
        run: pytest
      - name: Black
        shell: bash -l {0}
        run: black --check .
      - name: ISort
        shell: bash -l {0}
        run: isort --recursive --check-only
      - name: Flake8
        shell: bash -l {0}
        run: flake8
      - name: ASV
        shell: bash -l {0}
        run: |
          asv --config ./asv_bench/asv.conf.json machine --machine travis --os unknown --arch unknown --cpu unknown --ram unknown
          asv --config ./asv_bench/asv.conf.json run --show-stderr --environment existing --quick
      - name: Sphinx
        shell: bash -l {0}
        run: |
          python setup.py build_sphinx
          touch ./docs/_build/html/.nojekyll
      - name: Shellcheck
        shell: bash -l {0}
        run: shellcheck scripts/*.sh
      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          name: pytest-${{ runner.OS }}-${{ matrix.python }}
      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') && matrix.python == '3.7'
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_PASSWORD }}
      - name: Deploy Docs
        if: github.event_name == 'push' && github.event.ref == 'refs/heads/master' && matrix.python == '3.7'
        uses: peaceiris/actions-gh-pages@v2.5.0
        env:
          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: ./docs/_build/html
